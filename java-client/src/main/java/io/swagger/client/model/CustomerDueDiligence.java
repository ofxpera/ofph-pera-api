/*
 * OFxPERA API
 * Philippines Open Finance API Implementation for PERA
 *
 * OpenAPI spec version: 0.0.7
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CustomerDueDiligence
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-24T23:12:52.341191218Z[GMT]")

public class CustomerDueDiligence {
  @SerializedName("employmentStatus")
  private String employmentStatus = null;

  @SerializedName("occupation")
  private String occupation = null;

  @SerializedName("natureOfWork")
  private String natureOfWork = null;

  @SerializedName("employerName")
  private String employerName = null;

  @SerializedName("employerAddress")
  private OneOfCustomerDueDiligenceEmployerAddress employerAddress = null;

  @SerializedName("pepIndicator")
  private Boolean pepIndicator = false;

  @SerializedName("fundSource")
  private String fundSource = null;

  /**
   * Customer Due Diligence Risk Level
   */
  @JsonAdapter(CddIndicatorEnum.Adapter.class)
  public enum CddIndicatorEnum {
    @SerializedName("Low")
    LOW("Low"),
    @SerializedName("Normal")
    NORMAL("Normal"),
    @SerializedName("High")
    HIGH("High");

    private String value;

    CddIndicatorEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CddIndicatorEnum fromValue(String input) {
      for (CddIndicatorEnum b : CddIndicatorEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CddIndicatorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CddIndicatorEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public CddIndicatorEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return CddIndicatorEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("cddIndicator")
  private CddIndicatorEnum cddIndicator = CddIndicatorEnum.NORMAL;

  public CustomerDueDiligence employmentStatus(String employmentStatus) {
    this.employmentStatus = employmentStatus;
    return this;
  }

   /**
   * Get employmentStatus
   * @return employmentStatus
  **/
  @Schema(required = true, description = "")
  public String getEmploymentStatus() {
    return employmentStatus;
  }

  public void setEmploymentStatus(String employmentStatus) {
    this.employmentStatus = employmentStatus;
  }

  public CustomerDueDiligence occupation(String occupation) {
    this.occupation = occupation;
    return this;
  }

   /**
   * Get occupation
   * @return occupation
  **/
  @Schema(description = "")
  public String getOccupation() {
    return occupation;
  }

  public void setOccupation(String occupation) {
    this.occupation = occupation;
  }

  public CustomerDueDiligence natureOfWork(String natureOfWork) {
    this.natureOfWork = natureOfWork;
    return this;
  }

   /**
   * PSIC Code
   * @return natureOfWork
  **/
  @Schema(description = "PSIC Code")
  public String getNatureOfWork() {
    return natureOfWork;
  }

  public void setNatureOfWork(String natureOfWork) {
    this.natureOfWork = natureOfWork;
  }

  public CustomerDueDiligence employerName(String employerName) {
    this.employerName = employerName;
    return this;
  }

   /**
   * Get employerName
   * @return employerName
  **/
  @Schema(description = "")
  public String getEmployerName() {
    return employerName;
  }

  public void setEmployerName(String employerName) {
    this.employerName = employerName;
  }

  public CustomerDueDiligence employerAddress(OneOfCustomerDueDiligenceEmployerAddress employerAddress) {
    this.employerAddress = employerAddress;
    return this;
  }

   /**
   * Get employerAddress
   * @return employerAddress
  **/
  @Schema(description = "")
  public OneOfCustomerDueDiligenceEmployerAddress getEmployerAddress() {
    return employerAddress;
  }

  public void setEmployerAddress(OneOfCustomerDueDiligenceEmployerAddress employerAddress) {
    this.employerAddress = employerAddress;
  }

  public CustomerDueDiligence pepIndicator(Boolean pepIndicator) {
    this.pepIndicator = pepIndicator;
    return this;
  }

   /**
   * Politically Exposed Person 1 - True; 0 - False
   * @return pepIndicator
  **/
  @Schema(required = true, description = "Politically Exposed Person 1 - True; 0 - False")
  public Boolean isPepIndicator() {
    return pepIndicator;
  }

  public void setPepIndicator(Boolean pepIndicator) {
    this.pepIndicator = pepIndicator;
  }

  public CustomerDueDiligence fundSource(String fundSource) {
    this.fundSource = fundSource;
    return this;
  }

   /**
   * Source of Funds
   * @return fundSource
  **/
  @Schema(required = true, description = "Source of Funds")
  public String getFundSource() {
    return fundSource;
  }

  public void setFundSource(String fundSource) {
    this.fundSource = fundSource;
  }

  public CustomerDueDiligence cddIndicator(CddIndicatorEnum cddIndicator) {
    this.cddIndicator = cddIndicator;
    return this;
  }

   /**
   * Customer Due Diligence Risk Level
   * @return cddIndicator
  **/
  @Schema(required = true, description = "Customer Due Diligence Risk Level")
  public CddIndicatorEnum getCddIndicator() {
    return cddIndicator;
  }

  public void setCddIndicator(CddIndicatorEnum cddIndicator) {
    this.cddIndicator = cddIndicator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerDueDiligence customerDueDiligence = (CustomerDueDiligence) o;
    return Objects.equals(this.employmentStatus, customerDueDiligence.employmentStatus) &&
        Objects.equals(this.occupation, customerDueDiligence.occupation) &&
        Objects.equals(this.natureOfWork, customerDueDiligence.natureOfWork) &&
        Objects.equals(this.employerName, customerDueDiligence.employerName) &&
        Objects.equals(this.employerAddress, customerDueDiligence.employerAddress) &&
        Objects.equals(this.pepIndicator, customerDueDiligence.pepIndicator) &&
        Objects.equals(this.fundSource, customerDueDiligence.fundSource) &&
        Objects.equals(this.cddIndicator, customerDueDiligence.cddIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employmentStatus, occupation, natureOfWork, employerName, employerAddress, pepIndicator, fundSource, cddIndicator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerDueDiligence {\n");
    
    sb.append("    employmentStatus: ").append(toIndentedString(employmentStatus)).append("\n");
    sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
    sb.append("    natureOfWork: ").append(toIndentedString(natureOfWork)).append("\n");
    sb.append("    employerName: ").append(toIndentedString(employerName)).append("\n");
    sb.append("    employerAddress: ").append(toIndentedString(employerAddress)).append("\n");
    sb.append("    pepIndicator: ").append(toIndentedString(pepIndicator)).append("\n");
    sb.append("    fundSource: ").append(toIndentedString(fundSource)).append("\n");
    sb.append("    cddIndicator: ").append(toIndentedString(cddIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
