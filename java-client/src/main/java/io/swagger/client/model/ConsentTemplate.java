/*
 * OFxPERA API
 * Philippines Open Finance API Implementation for PERA
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ConsentTemplateDefaultDuration;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ConsentTemplate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-24T23:12:52.341191218Z[GMT]")

public class ConsentTemplate {
  @SerializedName("template_id")
  private String templateId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("permissions")
  private List<String> permissions = new ArrayList<String>();

  @SerializedName("purpose")
  private String purpose = null;

  @SerializedName("default_duration")
  private ConsentTemplateDefaultDuration defaultDuration = null;

  @SerializedName("terms_and_conditions")
  private String termsAndConditions = null;

  @SerializedName("data_usage_policy")
  private String dataUsagePolicy = null;

  @SerializedName("version")
  private String version = null;

  public ConsentTemplate templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @Schema(required = true, description = "")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public ConsentTemplate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConsentTemplate description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ConsentTemplate category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public ConsentTemplate permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public ConsentTemplate addPermissionsItem(String permissionsItem) {
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @Schema(required = true, description = "")
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }

  public ConsentTemplate purpose(String purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * Get purpose
   * @return purpose
  **/
  @Schema(required = true, description = "")
  public String getPurpose() {
    return purpose;
  }

  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }

  public ConsentTemplate defaultDuration(ConsentTemplateDefaultDuration defaultDuration) {
    this.defaultDuration = defaultDuration;
    return this;
  }

   /**
   * Get defaultDuration
   * @return defaultDuration
  **/
  @Schema(description = "")
  public ConsentTemplateDefaultDuration getDefaultDuration() {
    return defaultDuration;
  }

  public void setDefaultDuration(ConsentTemplateDefaultDuration defaultDuration) {
    this.defaultDuration = defaultDuration;
  }

  public ConsentTemplate termsAndConditions(String termsAndConditions) {
    this.termsAndConditions = termsAndConditions;
    return this;
  }

   /**
   * Get termsAndConditions
   * @return termsAndConditions
  **/
  @Schema(description = "")
  public String getTermsAndConditions() {
    return termsAndConditions;
  }

  public void setTermsAndConditions(String termsAndConditions) {
    this.termsAndConditions = termsAndConditions;
  }

  public ConsentTemplate dataUsagePolicy(String dataUsagePolicy) {
    this.dataUsagePolicy = dataUsagePolicy;
    return this;
  }

   /**
   * Get dataUsagePolicy
   * @return dataUsagePolicy
  **/
  @Schema(description = "")
  public String getDataUsagePolicy() {
    return dataUsagePolicy;
  }

  public void setDataUsagePolicy(String dataUsagePolicy) {
    this.dataUsagePolicy = dataUsagePolicy;
  }

  public ConsentTemplate version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsentTemplate consentTemplate = (ConsentTemplate) o;
    return Objects.equals(this.templateId, consentTemplate.templateId) &&
        Objects.equals(this.name, consentTemplate.name) &&
        Objects.equals(this.description, consentTemplate.description) &&
        Objects.equals(this.category, consentTemplate.category) &&
        Objects.equals(this.permissions, consentTemplate.permissions) &&
        Objects.equals(this.purpose, consentTemplate.purpose) &&
        Objects.equals(this.defaultDuration, consentTemplate.defaultDuration) &&
        Objects.equals(this.termsAndConditions, consentTemplate.termsAndConditions) &&
        Objects.equals(this.dataUsagePolicy, consentTemplate.dataUsagePolicy) &&
        Objects.equals(this.version, consentTemplate.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(templateId, name, description, category, permissions, purpose, defaultDuration, termsAndConditions, dataUsagePolicy, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsentTemplate {\n");
    
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    defaultDuration: ").append(toIndentedString(defaultDuration)).append("\n");
    sb.append("    termsAndConditions: ").append(toIndentedString(termsAndConditions)).append("\n");
    sb.append("    dataUsagePolicy: ").append(toIndentedString(dataUsagePolicy)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
