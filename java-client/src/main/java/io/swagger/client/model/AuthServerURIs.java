/*
 * OFxPERA API
 * Philippines Open Finance API Implementation for PERA
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Endpoints of the OFxPERA Participant as an Authorization Server
 */
@Schema(description = "Endpoints of the OFxPERA Participant as an Authorization Server")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-24T23:12:52.341191218Z[GMT]")

public class AuthServerURIs implements EndpointURIs {
  @SerializedName("issuer")
  private String issuer = null;

  @SerializedName("authorizationEndpoint")
  private String authorizationEndpoint = null;

  @SerializedName("tokenEndpoint")
  private String tokenEndpoint = null;

  @SerializedName("userInfoEndpoint")
  private String userInfoEndpoint = null;

  @SerializedName("endSessionEndpoint")
  private String endSessionEndpoint = null;

  @SerializedName("registrationEndpoint")
  private String registrationEndpoint = null;

  public AuthServerURIs issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier
   * @return issuer
  **/
  @Schema(required = true, description = "URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }

  public AuthServerURIs authorizationEndpoint(String authorizationEndpoint) {
    this.authorizationEndpoint = authorizationEndpoint;
    return this;
  }

   /**
   * URL of the OP&#x27;s OAuth 2.0 Authorization Endpoint
   * @return authorizationEndpoint
  **/
  @Schema(required = true, description = "URL of the OP's OAuth 2.0 Authorization Endpoint")
  public String getAuthorizationEndpoint() {
    return authorizationEndpoint;
  }

  public void setAuthorizationEndpoint(String authorizationEndpoint) {
    this.authorizationEndpoint = authorizationEndpoint;
  }

  public AuthServerURIs tokenEndpoint(String tokenEndpoint) {
    this.tokenEndpoint = tokenEndpoint;
    return this;
  }

   /**
   * URL of the OP&#x27;s OAuth 2.0 Token Endpoint
   * @return tokenEndpoint
  **/
  @Schema(required = true, description = "URL of the OP's OAuth 2.0 Token Endpoint")
  public String getTokenEndpoint() {
    return tokenEndpoint;
  }

  public void setTokenEndpoint(String tokenEndpoint) {
    this.tokenEndpoint = tokenEndpoint;
  }

  public AuthServerURIs userInfoEndpoint(String userInfoEndpoint) {
    this.userInfoEndpoint = userInfoEndpoint;
    return this;
  }

   /**
   * URL of the OP&#x27;s UserInfo Endpoint
   * @return userInfoEndpoint
  **/
  @Schema(description = "URL of the OP's UserInfo Endpoint")
  public String getUserInfoEndpoint() {
    return userInfoEndpoint;
  }

  public void setUserInfoEndpoint(String userInfoEndpoint) {
    this.userInfoEndpoint = userInfoEndpoint;
  }

  public AuthServerURIs endSessionEndpoint(String endSessionEndpoint) {
    this.endSessionEndpoint = endSessionEndpoint;
    return this;
  }

   /**
   * URL at the OP to which an RP can perform a redirect to
   * @return endSessionEndpoint
  **/
  @Schema(description = "URL at the OP to which an RP can perform a redirect to")
  public String getEndSessionEndpoint() {
    return endSessionEndpoint;
  }

  public void setEndSessionEndpoint(String endSessionEndpoint) {
    this.endSessionEndpoint = endSessionEndpoint;
  }

  public AuthServerURIs registrationEndpoint(String registrationEndpoint) {
    this.registrationEndpoint = registrationEndpoint;
    return this;
  }

   /**
   * URL of the OP&#x27;s Dynamic Client Registration Endpoint
   * @return registrationEndpoint
  **/
  @Schema(description = "URL of the OP's Dynamic Client Registration Endpoint")
  public String getRegistrationEndpoint() {
    return registrationEndpoint;
  }

  public void setRegistrationEndpoint(String registrationEndpoint) {
    this.registrationEndpoint = registrationEndpoint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthServerURIs authServerURIs = (AuthServerURIs) o;
    return Objects.equals(this.issuer, authServerURIs.issuer) &&
        Objects.equals(this.authorizationEndpoint, authServerURIs.authorizationEndpoint) &&
        Objects.equals(this.tokenEndpoint, authServerURIs.tokenEndpoint) &&
        Objects.equals(this.userInfoEndpoint, authServerURIs.userInfoEndpoint) &&
        Objects.equals(this.endSessionEndpoint, authServerURIs.endSessionEndpoint) &&
        Objects.equals(this.registrationEndpoint, authServerURIs.registrationEndpoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issuer, authorizationEndpoint, tokenEndpoint, userInfoEndpoint, endSessionEndpoint, registrationEndpoint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthServerURIs {\n");
    
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    authorizationEndpoint: ").append(toIndentedString(authorizationEndpoint)).append("\n");
    sb.append("    tokenEndpoint: ").append(toIndentedString(tokenEndpoint)).append("\n");
    sb.append("    userInfoEndpoint: ").append(toIndentedString(userInfoEndpoint)).append("\n");
    sb.append("    endSessionEndpoint: ").append(toIndentedString(endSessionEndpoint)).append("\n");
    sb.append("    registrationEndpoint: ").append(toIndentedString(registrationEndpoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
