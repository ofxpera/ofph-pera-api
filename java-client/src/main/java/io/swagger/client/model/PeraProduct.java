/*
 * OFxPERA API
 * Philippines Open Finance API Implementation for PERA
 *
 * OpenAPI spec version: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PeraProduct
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-03T23:36:15.658195047Z[GMT]")

public class PeraProduct {
  @SerializedName("product_id")
  private String productId = null;

  @SerializedName("product_name")
  private String productName = null;

  @SerializedName("product_description")
  private String productDescription = null;

  /**
   * The risk rating of the product
   */
  @JsonAdapter(ProductRiskRatingEnum.Adapter.class)
  public enum ProductRiskRatingEnum {
    @SerializedName("Conservative")
    CONSERVATIVE("Conservative"),
    @SerializedName("Moderate")
    MODERATE("Moderate"),
    @SerializedName("Aggressive")
    AGGRESSIVE("Aggressive");

    private String value;

    ProductRiskRatingEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ProductRiskRatingEnum fromValue(String input) {
      for (ProductRiskRatingEnum b : ProductRiskRatingEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ProductRiskRatingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProductRiskRatingEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ProductRiskRatingEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ProductRiskRatingEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("product_risk_rating")
  private ProductRiskRatingEnum productRiskRating = null;

  @SerializedName("product_kiid_uri")
  private String productKiidUri = null;

  public PeraProduct productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Unique Identifier for the product
   * @return productId
  **/
  @Schema(description = "Unique Identifier for the product")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public PeraProduct productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * The name of the product
   * @return productName
  **/
  @Schema(required = true, description = "The name of the product")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public PeraProduct productDescription(String productDescription) {
    this.productDescription = productDescription;
    return this;
  }

   /**
   * A detailed description of the product
   * @return productDescription
  **/
  @Schema(required = true, description = "A detailed description of the product")
  public String getProductDescription() {
    return productDescription;
  }

  public void setProductDescription(String productDescription) {
    this.productDescription = productDescription;
  }

  public PeraProduct productRiskRating(ProductRiskRatingEnum productRiskRating) {
    this.productRiskRating = productRiskRating;
    return this;
  }

   /**
   * The risk rating of the product
   * @return productRiskRating
  **/
  @Schema(required = true, description = "The risk rating of the product")
  public ProductRiskRatingEnum getProductRiskRating() {
    return productRiskRating;
  }

  public void setProductRiskRating(ProductRiskRatingEnum productRiskRating) {
    this.productRiskRating = productRiskRating;
  }

  public PeraProduct productKiidUri(String productKiidUri) {
    this.productKiidUri = productKiidUri;
    return this;
  }

   /**
   * URI to the KIID (Key Investor Information Document) for the product
   * @return productKiidUri
  **/
  @Schema(required = true, description = "URI to the KIID (Key Investor Information Document) for the product")
  public String getProductKiidUri() {
    return productKiidUri;
  }

  public void setProductKiidUri(String productKiidUri) {
    this.productKiidUri = productKiidUri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeraProduct peraProduct = (PeraProduct) o;
    return Objects.equals(this.productId, peraProduct.productId) &&
        Objects.equals(this.productName, peraProduct.productName) &&
        Objects.equals(this.productDescription, peraProduct.productDescription) &&
        Objects.equals(this.productRiskRating, peraProduct.productRiskRating) &&
        Objects.equals(this.productKiidUri, peraProduct.productKiidUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, productName, productDescription, productRiskRating, productKiidUri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeraProduct {\n");
    
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    productDescription: ").append(toIndentedString(productDescription)).append("\n");
    sb.append("    productRiskRating: ").append(toIndentedString(productRiskRating)).append("\n");
    sb.append("    productKiidUri: ").append(toIndentedString(productKiidUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
