/*
 * OFxPERA API
 * Philippines Open Finance API Implementation for PERA
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Address;
import io.swagger.client.model.JWKSet;
import io.swagger.client.model.ParticipantContact;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Participant
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-24T23:12:52.341191218Z[GMT]")

public class Participant {
  @SerializedName("participantId")
  private String participantId = null;

  @SerializedName("participantName")
  private String participantName = null;

  /**
   * Gets or Sets participantType
   */
  @JsonAdapter(ParticipantTypeEnum.Adapter.class)
  public enum ParticipantTypeEnum {
    @SerializedName("oauth_client")
    OAUTH_CLIENT("oauth_client"),
    @SerializedName("auth_server")
    AUTH_SERVER("auth_server");

    private String value;

    ParticipantTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ParticipantTypeEnum fromValue(String input) {
      for (ParticipantTypeEnum b : ParticipantTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ParticipantTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ParticipantTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ParticipantTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ParticipantTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("participantType")
  private List<ParticipantTypeEnum> participantType = null;

  @SerializedName("participantDescription")
  private String participantDescription = null;

  @SerializedName("participantLogoUri")
  private String participantLogoUri = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("active")
    ACTIVE("active"),
    @SerializedName("inactive")
    INACTIVE("inactive"),
    @SerializedName("suspended")
    SUSPENDED("suspended");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = StatusEnum.ACTIVE;

  @SerializedName("jwks")
  private JWKSet jwks = null;

  @SerializedName("contact")
  private ParticipantContact contact = null;

  @SerializedName("address")
  private Address address = null;

  public Participant participantId(String participantId) {
    this.participantId = participantId;
    return this;
  }

   /**
   * Unique identifier for the participant
   * @return participantId
  **/
  @Schema(description = "Unique identifier for the participant")
  public String getParticipantId() {
    return participantId;
  }

  public void setParticipantId(String participantId) {
    this.participantId = participantId;
  }

  public Participant participantName(String participantName) {
    this.participantName = participantName;
    return this;
  }

   /**
   * Trading name of the participant
   * @return participantName
  **/
  @Schema(description = "Trading name of the participant")
  public String getParticipantName() {
    return participantName;
  }

  public void setParticipantName(String participantName) {
    this.participantName = participantName;
  }

  public Participant participantType(List<ParticipantTypeEnum> participantType) {
    this.participantType = participantType;
    return this;
  }

  public Participant addParticipantTypeItem(ParticipantTypeEnum participantTypeItem) {
    if (this.participantType == null) {
      this.participantType = new ArrayList<ParticipantTypeEnum>();
    }
    this.participantType.add(participantTypeItem);
    return this;
  }

   /**
   * Types of roles this participant can perform
   * @return participantType
  **/
  @Schema(description = "Types of roles this participant can perform")
  public List<ParticipantTypeEnum> getParticipantType() {
    return participantType;
  }

  public void setParticipantType(List<ParticipantTypeEnum> participantType) {
    this.participantType = participantType;
  }

  public Participant participantDescription(String participantDescription) {
    this.participantDescription = participantDescription;
    return this;
  }

   /**
   * Short Description of the participant (Required for PERA Admin)
   * @return participantDescription
  **/
  @Schema(description = "Short Description of the participant (Required for PERA Admin)")
  public String getParticipantDescription() {
    return participantDescription;
  }

  public void setParticipantDescription(String participantDescription) {
    this.participantDescription = participantDescription;
  }

  public Participant participantLogoUri(String participantLogoUri) {
    this.participantLogoUri = participantLogoUri;
    return this;
  }

   /**
   * logo uri of the participant
   * @return participantLogoUri
  **/
  @Schema(description = "logo uri of the participant")
  public String getParticipantLogoUri() {
    return participantLogoUri;
  }

  public void setParticipantLogoUri(String participantLogoUri) {
    this.participantLogoUri = participantLogoUri;
  }

  public Participant status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Participant jwks(JWKSet jwks) {
    this.jwks = jwks;
    return this;
  }

   /**
   * Get jwks
   * @return jwks
  **/
  @Schema(required = true, description = "")
  public JWKSet getJwks() {
    return jwks;
  }

  public void setJwks(JWKSet jwks) {
    this.jwks = jwks;
  }

  public Participant contact(ParticipantContact contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(description = "")
  public ParticipantContact getContact() {
    return contact;
  }

  public void setContact(ParticipantContact contact) {
    this.contact = contact;
  }

  public Participant address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Participant participant = (Participant) o;
    return Objects.equals(this.participantId, participant.participantId) &&
        Objects.equals(this.participantName, participant.participantName) &&
        Objects.equals(this.participantType, participant.participantType) &&
        Objects.equals(this.participantDescription, participant.participantDescription) &&
        Objects.equals(this.participantLogoUri, participant.participantLogoUri) &&
        Objects.equals(this.status, participant.status) &&
        Objects.equals(this.jwks, participant.jwks) &&
        Objects.equals(this.contact, participant.contact) &&
        Objects.equals(this.address, participant.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(participantId, participantName, participantType, participantDescription, participantLogoUri, status, jwks, contact, address);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Participant {\n");
    
    sb.append("    participantId: ").append(toIndentedString(participantId)).append("\n");
    sb.append("    participantName: ").append(toIndentedString(participantName)).append("\n");
    sb.append("    participantType: ").append(toIndentedString(participantType)).append("\n");
    sb.append("    participantDescription: ").append(toIndentedString(participantDescription)).append("\n");
    sb.append("    participantLogoUri: ").append(toIndentedString(participantLogoUri)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    jwks: ").append(toIndentedString(jwks)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
