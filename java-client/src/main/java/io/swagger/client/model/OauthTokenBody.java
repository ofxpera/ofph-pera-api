/*
 * OFxPERA API
 * Philippines Open Finance API Implementation for PERA
 *
 * OpenAPI spec version: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * OauthTokenBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-03T23:36:15.658195047Z[GMT]")

public class OauthTokenBody {
  /**
   * Gets or Sets grantType
   */
  @JsonAdapter(GrantTypeEnum.Adapter.class)
  public enum GrantTypeEnum {
    @SerializedName("authorization_code")
    AUTHORIZATION_CODE("authorization_code"),
    @SerializedName("refresh_token")
    REFRESH_TOKEN("refresh_token");

    private String value;

    GrantTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static GrantTypeEnum fromValue(String input) {
      for (GrantTypeEnum b : GrantTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<GrantTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GrantTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public GrantTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return GrantTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("grant_type")
  private GrantTypeEnum grantType = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("redirect_uri")
  private String redirectUri = null;

  @SerializedName("client_id")
  private String clientId = null;

  @SerializedName("refresh_token")
  private String refreshToken = null;

  public OauthTokenBody grantType(GrantTypeEnum grantType) {
    this.grantType = grantType;
    return this;
  }

   /**
   * Get grantType
   * @return grantType
  **/
  @Schema(required = true, description = "")
  public GrantTypeEnum getGrantType() {
    return grantType;
  }

  public void setGrantType(GrantTypeEnum grantType) {
    this.grantType = grantType;
  }

  public OauthTokenBody code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Authorization code received from the authorization server.
   * @return code
  **/
  @Schema(required = true, description = "Authorization code received from the authorization server.")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public OauthTokenBody redirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
    return this;
  }

   /**
   * Redirect URI used in the authorization request.
   * @return redirectUri
  **/
  @Schema(required = true, description = "Redirect URI used in the authorization request.")
  public String getRedirectUri() {
    return redirectUri;
  }

  public void setRedirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
  }

  public OauthTokenBody clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Client identifier for the token request.
   * @return clientId
  **/
  @Schema(required = true, description = "Client identifier for the token request.")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public OauthTokenBody refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * Refresh token used to obtain a new access token.
   * @return refreshToken
  **/
  @Schema(description = "Refresh token used to obtain a new access token.")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OauthTokenBody oauthTokenBody = (OauthTokenBody) o;
    return Objects.equals(this.grantType, oauthTokenBody.grantType) &&
        Objects.equals(this.code, oauthTokenBody.code) &&
        Objects.equals(this.redirectUri, oauthTokenBody.redirectUri) &&
        Objects.equals(this.clientId, oauthTokenBody.clientId) &&
        Objects.equals(this.refreshToken, oauthTokenBody.refreshToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(grantType, code, redirectUri, clientId, refreshToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OauthTokenBody {\n");
    
    sb.append("    grantType: ").append(toIndentedString(grantType)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
