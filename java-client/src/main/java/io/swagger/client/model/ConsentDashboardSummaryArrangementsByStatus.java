/*
 * OFxPERA API
 * Philippines Open Finance API Implementation for PERA
 *
 * OpenAPI spec version: 0.0.7
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ConsentDashboardSummaryArrangementsByStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-24T23:12:52.341191218Z[GMT]")

public class ConsentDashboardSummaryArrangementsByStatus {
  @SerializedName("active")
  private Integer active = null;

  @SerializedName("expired")
  private Integer expired = null;

  @SerializedName("revoked")
  private Integer revoked = null;

  @SerializedName("suspended")
  private Integer suspended = null;

  public ConsentDashboardSummaryArrangementsByStatus active(Integer active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Integer getActive() {
    return active;
  }

  public void setActive(Integer active) {
    this.active = active;
  }

  public ConsentDashboardSummaryArrangementsByStatus expired(Integer expired) {
    this.expired = expired;
    return this;
  }

   /**
   * Get expired
   * @return expired
  **/
  @Schema(description = "")
  public Integer getExpired() {
    return expired;
  }

  public void setExpired(Integer expired) {
    this.expired = expired;
  }

  public ConsentDashboardSummaryArrangementsByStatus revoked(Integer revoked) {
    this.revoked = revoked;
    return this;
  }

   /**
   * Get revoked
   * @return revoked
  **/
  @Schema(description = "")
  public Integer getRevoked() {
    return revoked;
  }

  public void setRevoked(Integer revoked) {
    this.revoked = revoked;
  }

  public ConsentDashboardSummaryArrangementsByStatus suspended(Integer suspended) {
    this.suspended = suspended;
    return this;
  }

   /**
   * Get suspended
   * @return suspended
  **/
  @Schema(description = "")
  public Integer getSuspended() {
    return suspended;
  }

  public void setSuspended(Integer suspended) {
    this.suspended = suspended;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsentDashboardSummaryArrangementsByStatus consentDashboardSummaryArrangementsByStatus = (ConsentDashboardSummaryArrangementsByStatus) o;
    return Objects.equals(this.active, consentDashboardSummaryArrangementsByStatus.active) &&
        Objects.equals(this.expired, consentDashboardSummaryArrangementsByStatus.expired) &&
        Objects.equals(this.revoked, consentDashboardSummaryArrangementsByStatus.revoked) &&
        Objects.equals(this.suspended, consentDashboardSummaryArrangementsByStatus.suspended);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, expired, revoked, suspended);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsentDashboardSummaryArrangementsByStatus {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    expired: ").append(toIndentedString(expired)).append("\n");
    sb.append("    revoked: ").append(toIndentedString(revoked)).append("\n");
    sb.append("    suspended: ").append(toIndentedString(suspended)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
